plugins {
    id 'java'
    id 'application'
    id "us.kirchmeier.capsule" version "1.0-rc1"

}

mainClassName = 'Main'

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets
        {
  main {
    java {
      srcDir 'src/main/java'
    }
    resources {
      srcDir 'src/main/resources'
    }
  }
  test {
    java {
      srcDir 'src/test/java'
    }
    resources {
      srcDir 'src/test/resources'
    }
  }
}



//here we add all the dependencies notice that mason and geomason are not on maven so we need to add them separately
dependencies
{
    //mason libraries. They aren't on maven so we have to lug their jars around
    compile fileTree(dir: 'libs/mason', include: '*.jar')
    compile fileTree(dir: 'libs/geomason', include: '*.jar')
    //a jury-rigged version of OSMOSE, hopefully linkable with this simulation
    compile fileTree(dir: 'libs/osmose', include: '*.jar')

    //guava. Useful for PreConditions and sometimes specialized collections
    compile "com.google.guava:guava:18.0"
    //shiny new genetic algorithm library. So far very unimpressive. Might switch back to watchmaker
    compile "org.bitbucket.fwilhelm:org.jenetics:3.1.0"
    //metawidget + apache binders. Useful for the gui
    compile "org.metawidget.modules:metawidget-all:4.1"
    compile "commons-beanutils:commons-beanutils:1.8.3"

    //logger:
    compile "com.esotericsoftware:minlog:1.3.0"


    //testing:
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.9.5"


}


//this makes tests multi-threaded when called from gradle. Useful!
test{
    maxParallelForks = Math.max(Runtime.runtime.availableProcessors() -1,1)
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}


task fatJar(type: FatCapsule) {
    archiveName = "oxfish_executable.jar"
    applicationClass 'Main'
}


test {
  useJUnit()
  testLogging {
    events "passed", "skipped", "failed"
  }
}


